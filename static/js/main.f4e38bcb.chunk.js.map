{"version":3,"sources":["components/Score.js","components/Event.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Score","props","className","id","userScore","compScore","Event","outcome","Button","onClick","onclick","value","src","alt","App","useState","setUserScore","setCompScore","play","buttons","setOutcome","compChoices","setCompChoices","useEffect","window","location","reload","map","button","Math","floor","random","length","playGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4e38bcb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Score = (props) => {\r\n  return (\r\n    <div className=\"score-div\" id=\"score-div\">\r\n      <div className=\"user-label\" id=\"user-label\">user</div>\r\n      <div className=\"comp-label\" id=\"comp-label\">comp</div>\r\n      <span className=\"score\" id=\"score\">{props.userScore} : {props.compScore}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Score;\r\n","import React from \"react\";\r\n\r\nconst Event = (props) => {\r\n  return (\r\n    <div className=\"event-div\" id=\"event-div\">\r\n      <span className=\"event\" id=\"event\">{props.outcome}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Event;\r\n","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n      <button onClick={props.onclick} className=\"button\" value={props.id} id={props.id}><img className=\"image\" src={props.src} alt={props.alt} /></button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import './App.css';\nimport Score from \"./components/Score.js\";\nimport Event from \"./components/Event.js\";\nimport Button from \"./components/Button.js\";\nimport React, {useState, useEffect} from \"react\";\n\nfunction App() {\n\n  let [userScore, setUserScore] = useState(null);\n  let [compScore, setCompScore] = useState(null);\n  const [buttons, setButtons] = useState([\n  { src: \"https://i.imgur.com/5aw99wQ.png\",\n    alt: \"Rock image\",\n    id: \"Rock\",\n    play: \"r\"\n  },\n  { src: \"https://i.imgur.com/I8PMMF5.png\",\n    alt: \"Paper image\",\n    id: \"Paper\",\n    play: \"p\"\n  },\n  { src: \"https://i.imgur.com/A7fQj0G.png\",\n    alt: \"Scissors image\",\n    id: \"Scissors\",\n    play: \"s\"\n  }\n  ]);\n  const [outcome, setOutcome] = useState(\"\");\n  const [compChoices, setCompChoices] = useState(\"\");\n\n  useEffect(() => {\n    setUserScore(0);\n    setCompScore(0);\n    setOutcome(\"Prova a battermi!\");\n    setCompChoices([\"r\", \"p\", \"s\"]);\n  }, []);\n\n  const playGame = (value) => {\n    const generateIndex = () => {\n      return Math.floor(Math.random() * compChoices.length);\n    };\n    let compChoice = compChoices[generateIndex()];\n    let challenge = value + compChoice;\n    switch(challenge) {\n      case \"rr\":\n        setOutcome(\"Sasso contro sasso. È un pareggio!\");\n        break;\n      case \"rp\":\n        setCompScore(compScore += 1);\n        setOutcome(\"Sasso contro carta. Hai perso!\");\n        break;\n      case \"rs\":\n        setUserScore(userScore += 1);\n        setOutcome(\"Sasso contro forbici. Hai vinto!\");\n        break;\n      case \"pr\":\n        setUserScore(userScore += 1);\n        setOutcome(\"Carta contro sasso. Hai vinto!\");\n        break;\n      case \"pp\":\n        setOutcome(\"Carta contro carta. È un pareggio!\");\n        break;\n      case \"ps\":\n        setCompScore(compScore += 1);\n        setOutcome(\"Carta contro forbici. Hai perso!\");\n        break;\n      case \"sr\":\n        setCompScore(compScore += 1);\n        setOutcome(\"Forbici contro sasso. Hai perso!\");\n        break;\n      case \"sp\":\n        setUserScore(userScore += 1);\n        setOutcome(\"Forbici contro carta. Hai vinto!\");\n        break;\n      case \"ss\":\n        setOutcome(\"Forbici contro forbici. È un pareggio!\");\n        break;\n    };\n  }\n\n  if (userScore === 15) {\n    return (\n      <div className=\"win-div\">\n        <h1>Complimenti, hai vinto!</h1>\n        <button className=\"reload-button\" onClick={() => window.location.reload()}>Gioca ancora</button>\n      </div>\n    );\n  } else if (compScore === 15) {\n    return (\n      <div className=\"lost-div\">\n        <h1>Purtroppo hai perso!</h1>\n        <button className=\"reload-button\" onClick={() => window.location.reload()}>Gioca ancora</button>\n      </div>\n    );\n  }\n\n  return (\n    <div id=\"container\" className=\"container\">\n      <header className=\"header\">Sasso Carta Forbici</header>\n      <Score userScore={userScore} compScore = {compScore} />\n      <Event outcome={outcome} />\n      <div className=\"button-div\" id=\"button-div\">\n        {buttons.map(button => {\n          return <Button onclick={() => playGame(button.play)} src={button.src} alt={button.alt} id={button.id}/>\n        })}\n      </div>\n      <footer className=\"footer\">Fai la tua mossa.\n      <p>coded by Paolo Provveduto</p></footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}